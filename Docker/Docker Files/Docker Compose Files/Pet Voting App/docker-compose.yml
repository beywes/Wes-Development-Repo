services:
  voting-app:
    build: ./voting-app
    ports:
      - "8084:8084"
    networks:
      - frontend
      - backend
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis

  result-app:
    build: ./result-app
    ports:
      - "8085:8085"
    networks:
      - frontend
      - backend
    depends_on:
      - db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=db

  worker:
    build: ./worker
    networks:
      - backend
    depends_on:
      - redis
      - db
    environment:
      - REDIS_HOST=redis
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=db

  redis:
    image: redis:alpine
    networks:
      - backend

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - backend
    volumes:
      - db-data:/var/lib/postgresql/data

networks:
  frontend:
  backend:

volumes:
  db-data:
